/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * employeeRECORDS.java
 *
 * Created on Apr 12, 2018, 8:33:22 PM
 * CREATED BY TAYYAAB TANVEER
 * USING AN ASSOCIATIVE ARRAY TO CREATE ACCESSIBLE AND VARIABLE DATABASE.
 */
/**
 *
 * @author King_TT
 */
package employeerecords;

import java.util.ArrayList;

import javax.swing.JOptionPane;
import java.awt.Color;
import java.awt.event.KeyEvent;

public class employeeRECORDS extends javax.swing.JFrame {

    ArrayList<employees> inventory = new ArrayList<employees>();

    /** Creates new form employeeRECORDS */
    public employeeRECORDS() {

        initComponents();
        getContentPane().setBackground(Color.orange);


    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    String firstname, secondname, salary, start, id;

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        fnLabel = new javax.swing.JLabel();
        lnLabel = new javax.swing.JLabel();
        asLabel = new javax.swing.JLabel();
        sdLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        remButton = new javax.swing.JButton();
        listButton = new javax.swing.JButton();
        fnInput = new javax.swing.JTextField();
        lnInput = new javax.swing.JTextField();
        asInput = new javax.swing.JTextField();
        sdInput = new javax.swing.JTextField();
        idInput = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Trebuchet MS", 1, 14));
        title.setText("Employee Records");

        idLabel.setFont(new java.awt.Font("Cambria", 0, 12));
        idLabel.setText("ID #");

        fnLabel.setFont(new java.awt.Font("Cambria", 0, 12));
        fnLabel.setText("First Name:");

        lnLabel.setFont(new java.awt.Font("Cambria", 0, 12));
        lnLabel.setText("Last Name:");

        asLabel.setFont(new java.awt.Font("Cambria", 0, 12));
        asLabel.setText("Annual Salary:");

        sdLabel.setFont(new java.awt.Font("Cambria", 0, 12));
        sdLabel.setText("Start Date:");

        addButton.setBackground(new java.awt.Color(204, 255, 204));
        addButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12));
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        remButton.setBackground(new java.awt.Color(204, 255, 204));
        remButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12));
        remButton.setText("REMOVE");
        remButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remButtonActionPerformed(evt);
            }
        });

        listButton.setBackground(new java.awt.Color(204, 255, 204));
        listButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12));
        listButton.setText("LIST");
        listButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listButtonActionPerformed(evt);
            }
        });

        asInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                asInputKeyTyped(evt);
            }
        });

        output.setBackground(new java.awt.Color(204, 204, 255));
        output.setColumns(20);
        output.setEditable(false);
        output.setFont(new java.awt.Font("Corbel", 1, 12));
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        exitButton.setBackground(new java.awt.Color(204, 255, 204));
        exitButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12));
        exitButton.setText("EXIT");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(asLabel)
                            .addComponent(lnLabel)
                            .addComponent(fnLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lnInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                            .addComponent(asInput, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(idInput, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE))
                            .addComponent(fnInput, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))))
                .addGap(109, 109, 109)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(addButton))
                        .addComponent(listButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(remButton))
                    .addComponent(exitButton))
                .addGap(139, 139, 139))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sdLabel)
                .addContainerGap(500, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(title)
                .addContainerGap(220, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idLabel)
                            .addComponent(idInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fnLabel)
                            .addComponent(fnInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lnLabel)
                            .addComponent(lnInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(asLabel)
                            .addComponent(asInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sdLabel)
                            .addComponent(sdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(title)
                        .addGap(44, 44, 44)
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(remButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(listButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exitButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        employees c;

        //variable
        firstname = fnInput.getText();
        secondname = lnInput.getText();

        //if statement to check that NONE of the fields are left empty... otherwise prompts user to fix
        if ((firstname.equals("")) || (secondname.equals("")) || (fnInput.getText().equals("")) || (lnInput.getText().equals("")) || (asInput.getText().equals("")) || (sdInput.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Please Input ALL required information!");
            // otherwise, allow it to be added to the index
        } else {

            //grab input
            firstname = fnInput.getText();
            start = sdInput.getText();
            salary = asInput.getText();
            id = idInput.getText();
            secondname = lnInput.getText();

            c = new employees(id, firstname, secondname, salary, start);
            inventory.add(c);

            //clear fields
            fnInput.setText("");
            lnInput.setText("");
            asInput.setText("");
            sdInput.setText("");
            idInput.setText("");


        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void listButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listButtonActionPerformed
        //clear field
        fnInput.setText("");
        lnInput.setText("");
        asInput.setText("");
        sdInput.setText("");
        idInput.setText("");

        //for loop go through each index and get fromthe class
        String temp = "";
        for (int x = 0; x <= inventory.size() - 1; x++) {
            temp = temp + inventory.get(x).idOut + " "
                    + inventory.get(x).fnOut + " "
                    + inventory.get(x).lnOut + " "
                    + inventory.get(x).asOut + " "
                    + inventory.get(x).sdOut + "\n";
        }
        //add to output
        output.setText(temp);
    }//GEN-LAST:event_listButtonActionPerformed

    private void remButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remButtonActionPerformed
        //if the id is not empty check
        if (!(idInput.getText().equals(""))) {

            //variable to find a match
            String find = idInput.getText();

            String temp = "";
            //loop go through inventory
            for (int x = 0; x <= inventory.size() - 1; x++) {
                //if there is a match for id
                if (inventory.get(x).idOut.equals(find)) {
                    // it is cleared (did not know how to get it to remove, it would give error saying its not a statement.
                    inventory.remove(x);

                    output.setText("REMOVED!");
                    return;
                } else {
                    output.setText("NOT FOUND!");
                }
            }
        }

    }//GEN-LAST:event_remButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_exitButtonActionPerformed

    private void asInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_asInputKeyTyped
        char astype = evt.getKeyChar();
        // if the keypress is not one of those listed in this if statement
        if (!(Character.isDigit(astype) || (astype == KeyEvent.VK_BACK_SPACE) || (astype == KeyEvent.VK_DELETE) || (astype == '.'))) {
            //The input will be consumed and background will become red to alert the user.
            evt.consume();
            asInput.setBackground(Color.RED);
            //otherwise, the background will be yellow and the input will be taken.
        } else {
            asInput.setBackground(Color.YELLOW);
        }
    }//GEN-LAST:event_asInputKeyTyped
// class declearation and set parameters to accept string

    class employees {

        String fnOut, lnOut, asOut, idOut, sdOut;

        employees(String _id, String _firstname, String _secondname, String _salary, String _date) {
            fnOut = _firstname;
            lnOut = _secondname;
            sdOut = _date;
            asOut = _salary;
            idOut = _id;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new employeeRECORDS().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField asInput;
    private javax.swing.JLabel asLabel;
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField fnInput;
    private javax.swing.JLabel fnLabel;
    private javax.swing.JTextField idInput;
    private javax.swing.JLabel idLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listButton;
    private javax.swing.JTextField lnInput;
    private javax.swing.JLabel lnLabel;
    private javax.swing.JTextArea output;
    private javax.swing.JButton remButton;
    private javax.swing.JTextField sdInput;
    private javax.swing.JLabel sdLabel;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
